.TH "/Users/kuba/Desktop/R-Matrix/AZURE2/src/AZURE2.cpp" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/kuba/Desktop/R-Matrix/AZURE2/src/AZURE2.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'AZUREMain\&.h'\fP
.br
\fC#include 'Config\&.h'\fP
.br
\fC#include 'NucLine\&.h'\fP
.br
\fC#include 'SegLine\&.h'\fP
.br
\fC#include 'ExtrapLine\&.h'\fP
.br
\fC#include 'GSLException\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <iostream>\fP
.br
\fC#include <iomanip>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <gsl/gsl_errno\&.h>\fP
.br
\fC#include <readline/readline\&.h>\fP
.br
\fC#include <readline/history\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBSegPairs\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBwelcomeMessage\fP (const \fBConfig\fP &configure)"
.br
.ti -1c
.RI "void \fBexitMessage\fP (const \fBConfig\fP &configure)"
.br
.ti -1c
.RI "void \fBprintHelp\fP ()"
.br
.ti -1c
.RI "bool \fBparseOptions\fP (int argc, char *argv[], \fBConfig\fP &configure)"
.br
.ti -1c
.RI "int \fBcommandShell\fP (const \fBConfig\fP &configure)"
.br
.ti -1c
.RI "void \fBprocessCommand\fP (int command, \fBConfig\fP &configure)"
.br
.ti -1c
.RI "void \fBgetParameterFile\fP (bool useReadline, \fBConfig\fP &configure)"
.br
.ti -1c
.RI "bool \fBreadSegmentFile\fP (const \fBConfig\fP &configure, std::vector< \fBSegPairs\fP > &segPairs)"
.br
.ti -1c
.RI "void \fBgetTemperatureFile\fP (bool useReadline, \fBConfig\fP &configure)"
.br
.ti -1c
.RI "void \fBgetRateParams\fP (\fBConfig\fP &configure, std::vector< \fBSegPairs\fP > &segPairs, bool useReadline)"
.br
.ti -1c
.RI "bool \fBcheckExternalCapture\fP (\fBConfig\fP &configure, const std::vector< \fBSegPairs\fP > &segPairs)"
.br
.ti -1c
.RI "void \fBgetExternalCaptureFile\fP (bool useReadline, \fBConfig\fP &configure)"
.br
.ti -1c
.RI "void \fBstartMessage\fP (const \fBConfig\fP &configure)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "bool checkExternalCapture (\fBConfig\fP & configure, const std::vector< \fBSegPairs\fP > & segPairs)"
This function checks the external capture file against a vector of segment key pairs\&. Only if the calculation includes external capture segments is the user prompted for an integrals file\&. The appropriate configure flag is set here\&. 
.PP
Definition at line \fB438\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "int commandShell (const \fBConfig\fP & configure)"
This function handles the command shell in AZURE2\&. The function will not terminate until the user enters a valid integer option\&. Upon successful entry, the integer option is returned\&. 
.PP
Definition at line \fB143\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void exitMessage (const \fBConfig\fP & configure)"
This function prints a message upon successful termination of the program\&. 
.PP
Definition at line \fB56\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void getExternalCaptureFile (bool useReadline, \fBConfig\fP & configure)"
This function promps the user for an external capture integrals file, checks for it's validity, and stores the path\&. 
.PP
Definition at line \fB497\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void getParameterFile (bool useReadline, \fBConfig\fP & configure)"
This function prompts for a parameter file and sets the corresponding configure flags and variables based on the user response\&. 
.PP
Definition at line \fB206\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void getRateParams (\fBConfig\fP & configure, std::vector< \fBSegPairs\fP > & segPairs, bool useReadline)"
This function prompts the user for the required parameters if reaction rate is to be calculated\&. 
.PP
Definition at line \fB351\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void getTemperatureFile (bool useReadline, \fBConfig\fP & configure)"
If reaction rate is desired, the user may specify a file containing temperatures for the calculation\&. This function prompts for that file name, checks for access, and stores path\&. 
.PP
Definition at line \fB312\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "int main (int argc, char * argv[])"
This is the main function\&. All the above initialization functions are called from here\&. The \fBAZUREMain\fP oject is created and called\&. 
.PP
Definition at line \fB556\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "bool parseOptions (int argc, char * argv[], \fBConfig\fP & configure)"
This function parses the command line options given, and sets the appropriate variables in the \fBConfig\fP structure\&. It also reads and parses the configuration file if the appropriate environment variable is set\&. 
.PP
Definition at line \fB89\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void printHelp ()"
This function prints the response to the --help command which consists of available runtime options\&. 
.PP
Definition at line \fB66\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void processCommand (int command, \fBConfig\fP & configure)"
This function takes the returned option from the commandShell function and sets the appropriate flags in the \fBConfig\fP structure\&. 
.PP
Definition at line \fB175\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "bool readSegmentFile (const \fBConfig\fP & configure, std::vector< \fBSegPairs\fP > & segPairs)"
This function reads the segment file, and stores the active entrance and exit pair keys for cross reference with the External capture file\&. Only if an active external capture segment is required is the user prompted for an external integrals file\&. 
.PP
Definition at line \fB247\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void startMessage (const \fBConfig\fP & configure)"
This function prints a brief start message describing the type of calculation that will be performed\&. 
.PP
Definition at line \fB539\fP of file \fBAZURE2\&.cpp\fP\&.
.SS "void welcomeMessage (const \fBConfig\fP & configure)"
This function displays the welcome banner\&. 
.PP
Definition at line \fB40\fP of file \fBAZURE2\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
