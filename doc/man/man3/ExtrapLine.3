.TH "ExtrapLine" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ExtrapLine \- A class to read and store a line from the extrapolation input file\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ExtrapLine\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBExtrapLine\fP (std::istream &stream)"
.br
.ti -1c
.RI "int \fBisActive\fP () const"
.br
.ti -1c
.RI "int \fBentranceKey\fP () const"
.br
.ti -1c
.RI "int \fBexitKey\fP () const"
.br
.ti -1c
.RI "double \fBminE\fP () const"
.br
.ti -1c
.RI "double \fBmaxE\fP () const"
.br
.ti -1c
.RI "double \fBminA\fP () const"
.br
.ti -1c
.RI "double \fBmaxA\fP () const"
.br
.ti -1c
.RI "double \fBeStep\fP () const"
.br
.ti -1c
.RI "double \fBaStep\fP () const"
.br
.ti -1c
.RI "int \fBisDiff\fP () const"
.br
.ti -1c
.RI "double \fBphaseJ\fP () const"
.br
.ti -1c
.RI "int \fBphaseL\fP () const"
.br
.ti -1c
.RI "int \fBmaxAngDistOrder\fP () const"
.br
.in -1c
.SH "Detailed Description"
.PP 
A class to read and store a line from the extrapolation input file\&. 

The \fBExtrapLine\fP class reads and stores a line from the extrapolation input file\&. 
.PP
Definition at line \fB13\fP of file \fBExtrapLine\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ExtrapLine::ExtrapLine (std::istream & stream)\fC [inline]\fP"
Constructor fill the \fBExtrapLine\fP object from an input stream\&. 
.PP
Definition at line \fB18\fP of file \fBExtrapLine\&.h\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "double ExtrapLine::aStep () const\fC [inline]\fP"
Returns the size angle step between generated points\&. 
.PP
Definition at line \fB62\fP of file \fBExtrapLine\&.h\fP\&.
.SS "int ExtrapLine::entranceKey () const\fC [inline]\fP"
Returns the particle pair key corresponding to the entrance channel for the data segment\&. 
.PP
Definition at line \fB33\fP of file \fBExtrapLine\&.h\fP\&.
.SS "double ExtrapLine::eStep () const\fC [inline]\fP"
Returns the size energy step between generated points\&. 
.PP
Definition at line \fB58\fP of file \fBExtrapLine\&.h\fP\&.
.SS "int ExtrapLine::exitKey () const\fC [inline]\fP"
Returns the particle pair key corresponding to the exit channel for the data segment\&. 
.PP
Definition at line \fB38\fP of file \fBExtrapLine\&.h\fP\&.
.SS "int ExtrapLine::isActive () const\fC [inline]\fP"
Returns non-zero if the line is to be included in the calculation\&. 
.PP
Definition at line \fB28\fP of file \fBExtrapLine\&.h\fP\&.
.SS "int ExtrapLine::isDiff () const\fC [inline]\fP"
Return 0 if the segment is angle-integrated cross section, 1 for differential cross section, and 2 for phase shift\&. 
.PP
Definition at line \fB67\fP of file \fBExtrapLine\&.h\fP\&.
.SS "double ExtrapLine::maxA () const\fC [inline]\fP"
Returns the maximum angle to be generated\&. 
.PP
Definition at line \fB54\fP of file \fBExtrapLine\&.h\fP\&.
.SS "int ExtrapLine::maxAngDistOrder () const\fC [inline]\fP"
Returns the maximum polynomial order if segment is angular distribution\&. 
.PP
Definition at line \fB82\fP of file \fBExtrapLine\&.h\fP\&.
.SS "double ExtrapLine::maxE () const\fC [inline]\fP"
Returns the maximum energy to be generated\&. 
.PP
Definition at line \fB46\fP of file \fBExtrapLine\&.h\fP\&.
.SS "double ExtrapLine::minA () const\fC [inline]\fP"
Returns the minimum angle to be generated\&. 
.PP
Definition at line \fB50\fP of file \fBExtrapLine\&.h\fP\&.
.SS "double ExtrapLine::minE () const\fC [inline]\fP"
Returns the minimum energy to be generated\&. 
.PP
Definition at line \fB42\fP of file \fBExtrapLine\&.h\fP\&.
.SS "double ExtrapLine::phaseJ () const\fC [inline]\fP"
Returns the spin value for the segment if the segment is to contain phase shift\&. 
.PP
Definition at line \fB72\fP of file \fBExtrapLine\&.h\fP\&.
.SS "int ExtrapLine::phaseL () const\fC [inline]\fP"
Returns the orbital angular momentum value for the segment if the segment is to contain phase shift\&. 
.PP
Definition at line \fB77\fP of file \fBExtrapLine\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
