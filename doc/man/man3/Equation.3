.TH "Equation" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Equation \- A class for parsing algebraic expressions\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Equation\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEquation\fP ()"
.br
.ti -1c
.RI "\fBEquation\fP (std::string equation, int numParams, const \fBConfig\fP &)"
.br
.ti -1c
.RI "\fBEquation\fP (std::string equation, std::vector< double > parameters, const \fBConfig\fP &)"
.br
.ti -1c
.RI "\fBEquation\fP (std::string equation, double parameters[], size_t arraySize, const \fBConfig\fP &)"
.br
.ti -1c
.RI "void \fBInitialize\fP (std::string equation, int numParams, const \fBConfig\fP &)"
.br
.ti -1c
.RI "void \fBSetParameter\fP (unsigned int index, double value, const \fBConfig\fP &)"
.br
.ti -1c
.RI "std::vector< double > \fBGetParameters\fP () const"
.br
.ti -1c
.RI "double \fBEvaluate\fP (const \fBConfig\fP &, double x=0\&.0) const"
.br
.in -1c
.SH "Detailed Description"
.PP 
A class for parsing algebraic expressions\&. 

The \fBEquation\fP class is used in AZURE to parametrize stopping cross sections as a function of energy\&. An arbitrary equation can be given, and parameters specified, which is then parsed and evaluated on the fly whenever stopping cross section is needed\&. 
.PP
Definition at line \fB49\fP of file \fBEquation\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Equation::Equation ()"
Empty constructor\&. 
.PP
Definition at line \fB11\fP of file \fBEquation\&.cpp\fP\&.
.SS "Equation::Equation (std::string equation, int numParams, const \fBConfig\fP & configure)"
This constructor is used to create an \fBEquation\fP object with a equation string, and a specified number of parameters\&. The parameters are only initialized, and must be set with the \fBEquation::SetParameter()\fP function\&. 
.PP
Definition at line \fB20\fP of file \fBEquation\&.cpp\fP\&.
.SS "Equation::Equation (std::string equation, std::vector< double > parameters, const \fBConfig\fP & configure)"
This constructor is used to create and \fBEquation\fP object with an equation string and an already created parameter vector\&. The size of the parameter vector must correspond to the number of parameters in the equation string\&. 
.PP
Definition at line \fB40\fP of file \fBEquation\&.cpp\fP\&.
.SS "Equation::Equation (std::string equation, double parameters[], size_t arraySize, const \fBConfig\fP & configure)"
This constructor is used to create an \fBEquation\fP object with an equation string and an array of parameters\&. The array must be of the size corresponding to the number of parameters in the equation string\&. 
.br
 
.PP
Definition at line \fB56\fP of file \fBEquation\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "double Equation::Evaluate (const \fBConfig\fP & configure, double x = \fC0\&.0\fP) const"
Evaluates the \fBEquation\fP object for a specified dependent variable\&. 
.PP
Definition at line \fB491\fP of file \fBEquation\&.cpp\fP\&.
.SS "std::vector< double > Equation::GetParameters () const"
Returns the vector containing all the parameters in the \fBEquation\fP object\&. 
.PP
Definition at line \fB200\fP of file \fBEquation\&.cpp\fP\&.
.SS "void Equation::Initialize (std::string equation, int numParams, const \fBConfig\fP & configure)"
If the empty constructor was used to create the \fBEquation\fP object, this function can be used to set the equation string and initialize the parameter array\&. The parameters must be set manually\&. 
.PP
Definition at line \fB73\fP of file \fBEquation\&.cpp\fP\&.
.SS "void Equation::SetParameter (unsigned int index, double value, const \fBConfig\fP & configure)"
Sets the specified parameter\&. 
.PP
Definition at line \fB208\fP of file \fBEquation\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
