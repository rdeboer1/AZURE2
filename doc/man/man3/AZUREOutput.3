.TH "AZUREOutput" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AZUREOutput \- A class to assist in writing AZURE output files\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <AZUREOutput\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAZUREOutput\fP (std::string)"
.br
.ti -1c
.RI "\fB~AZUREOutput\fP ()"
.br
.ti -1c
.RI "bool \fBIsExtrap\fP () const"
.br
.ti -1c
.RI "std::filebuf * \fBoperator()\fP (int entranceKey, int exitKey, bool isAngDist=false)"
.br
.ti -1c
.RI "int \fBNumAZUREFBuffers\fP () const"
.br
.ti -1c
.RI "int \fBIsAZUREFBuffer\fP (int, int, bool)"
.br
.ti -1c
.RI "std::string \fBGetOutputDir\fP () const"
.br
.ti -1c
.RI "void \fBAddAZUREFBuffer\fP (\fBAZUREFBuffer\fP *)"
.br
.ti -1c
.RI "void \fBSetExtrap\fP ()"
.br
.ti -1c
.RI "\fBAZUREFBuffer\fP * \fBGetAZUREFBuffer\fP (int)"
.br
.in -1c
.SH "Detailed Description"
.PP 
A class to assist in writing AZURE output files\&. 

The \fBEData::WriteOutputFiles\fP function simply loops over all \fBESegment\fP and \fBEPoint\fP objects when writing the output of an AZURE calculation\&. To ensure that all output for a given entrance and exit pair combination is written to a single file, the \fBAZUREOutput\fP class is used\&. The \fBAZUREOutput\fP object is a container for a vector of \fBAZUREFBuffer\fP objects\&. 
.PP
Definition at line \fB16\fP of file \fBAZUREOutput\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "AZUREOutput::AZUREOutput (std::string outputdir)"
The \fBAZUREOutput\fP object is created with reference to an output directory\&. 
.PP
Definition at line \fB7\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "AZUREOutput::~AZUREOutput ()"
On destruction of the \fBAZUREOutput\fP instance, each \fBAZUREFBuffer\fP object is also destroyed\&. 
.PP
Definition at line \fB16\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void AZUREOutput::AddAZUREFBuffer (\fBAZUREFBuffer\fP * azureFBuffer)"
Adds a pointer to an \fBAZUREFBuffer\fP object to the vector\&. 
.PP
Definition at line \fB86\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "\fBAZUREFBuffer\fP * AZUREOutput::GetAZUREFBuffer (int fBufferNum)"
Returns a pointer to the \fBAZUREFBuffer\fP object specified by a position in the vector\&. 
.PP
Definition at line \fB102\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "std::string AZUREOutput::GetOutputDir () const"
Returns the output directory for the \fBAZUREOutput\fP object\&. 
.PP
Definition at line \fB78\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "int AZUREOutput::IsAZUREFBuffer (int entranceKey, int exitKey, bool isAngDist)"
Tests if a pointer to an \fBAZUREFBuffer\fP object corresponding to the specified entrance and exit keys exists in the vector\&. If such a pointer exists, the position in the vector is returned\&. Otherwise, the function returns 0\&. 
.PP
Definition at line \fB61\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "bool AZUREOutput::IsExtrap () const"
Returns true if the output is an extrapolation\&. 
.PP
Definition at line \fB24\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "int AZUREOutput::NumAZUREFBuffers () const"
Returns the number of pointers to \fBAZUREFBuffer\fP objects stored in the vector\&. 
.PP
Definition at line \fB51\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "std::filebuf * AZUREOutput::operator() (int entranceKey, int exitKey, bool isAngDist = \fCfalse\fP)"
The parenthesis operator is defined so that the instance of \fBAZUREOutput\fP can be called as a function\&. 
.br
 The instance is called using a reference to an entrance and exit pair key combination\&. The function tests if there is a pointer to an \fBAZUREFBuffer\fP object in a vector\&. If such a pointer exists, the pointer to the actual file buffer contained in the corresponding \fBAZUREFBuffer\fP object is returned\&. Otherwise, a new \fBAZUREFBuffer\fP object is created with the entrance and exit key, a pointer to that object is stored in a vector, and the pointer to the actual new file buffer is returned\&. 
.PP
Definition at line \fB37\fP of file \fBAZUREOutput\&.cpp\fP\&.
.SS "void AZUREOutput::SetExtrap ()"
Sets the extrapolation flag to true\&. 
.PP
Definition at line \fB94\fP of file \fBAZUREOutput\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
