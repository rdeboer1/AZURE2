.TH "EData" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
EData \- An AZURE data object\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <EData\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEData\fP ()"
.br
.ti -1c
.RI "int \fBNumSegments\fP () const"
.br
.ti -1c
.RI "int \fBFill\fP (const \fBConfig\fP &, \fBCNuc\fP *)"
.br
.ti -1c
.RI "int \fBMakePoints\fP (const \fBConfig\fP &, \fBCNuc\fP *)"
.br
.ti -1c
.RI "int \fBIterations\fP () const"
.br
.ti -1c
.RI "int \fBNumTargetEffects\fP () const"
.br
.ti -1c
.RI "int \fBGetNormParamOffset\fP () const"
.br
.ti -1c
.RI "int \fBReadTargetEffectsFile\fP (const \fBConfig\fP &, \fBCNuc\fP *)"
.br
.ti -1c
.RI "bool \fBIsFit\fP () const"
.br
.ti -1c
.RI "bool \fBIsErrorAnalysis\fP () const"
.br
.ti -1c
.RI "bool \fBIsSegmentKey\fP (int)"
.br
.ti -1c
.RI "void \fBSetFit\fP (bool)"
.br
.ti -1c
.RI "void \fBSetErrorAnalysis\fP (bool)"
.br
.ti -1c
.RI "void \fBIterate\fP ()"
.br
.ti -1c
.RI "void \fBResetIterations\fP ()"
.br
.ti -1c
.RI "int \fBInitialize\fP (\fBCNuc\fP *, const \fBConfig\fP &)"
.br
.ti -1c
.RI "void \fBAddSegment\fP (\fBESegment\fP)"
.br
.ti -1c
.RI "void \fBPrintData\fP (const \fBConfig\fP &)"
.br
.ti -1c
.RI "void \fBCalcLegendreP\fP (int)"
.br
.ti -1c
.RI "void \fBPrintLegendreP\fP (const \fBConfig\fP &)"
.br
.ti -1c
.RI "int \fBCalcEDependentValues\fP (\fBCNuc\fP *, const \fBConfig\fP &)"
.br
.ti -1c
.RI "void \fBPrintEDependentValues\fP (const \fBConfig\fP &, \fBCNuc\fP *)"
.br
.ti -1c
.RI "void \fBCalcCoulombAmplitude\fP (\fBCNuc\fP *)"
.br
.ti -1c
.RI "void \fBPrintCoulombAmplitude\fP (const \fBConfig\fP &, \fBCNuc\fP *)"
.br
.ti -1c
.RI "void \fBWriteOutputFiles\fP (const \fBConfig\fP &, bool=false)"
.br
.ti -1c
.RI "int \fBCalculateECAmplitudes\fP (\fBCNuc\fP *, const \fBConfig\fP &)"
.br
.ti -1c
.RI "void \fBMapData\fP ()"
.br
.ti -1c
.RI "void \fBAddTargetEffect\fP (\fBTargetEffect\fP)"
.br
.ti -1c
.RI "void \fBSetNormParamOffset\fP (int)"
.br
.ti -1c
.RI "void \fBFillMnParams\fP (ROOT::Minuit2::MnUserParameters &)"
.br
.ti -1c
.RI "void \fBFillNormsFromParams\fP (const \fBvector_r\fP &)"
.br
.ti -1c
.RI "void \fBDeleteLastSegment\fP ()"
.br
.ti -1c
.RI "\fBESegment\fP * \fBGetSegment\fP (int)"
.br
.ti -1c
.RI "\fBESegment\fP * \fBGetSegmentFromKey\fP (int)"
.br
.ti -1c
.RI "\fBEData\fP * \fBClone\fP () const"
.br
.ti -1c
.RI "\fBTargetEffect\fP * \fBGetTargetEffect\fP (int)"
.br
.ti -1c
.RI "\fBEDataIterator\fP \fBbegin\fP ()"
.br
.ti -1c
.RI "\fBEDataIterator\fP \fBend\fP ()"
.br
.ti -1c
.RI "std::vector< \fBESegment\fP > & \fBGetSegments\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
An AZURE data object\&. 

The \fBEData\fP object is the top level data object in AZURE\&. It is the container object for a vector of \fBESegment\fP objects\&. 
.PP
Definition at line \fB21\fP of file \fBEData\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "EData::EData ()"
The \fBEData\fP object has a private attribute containing the number of iterations needed to find the best fit parameters\&. At creation, this attribute is set to 0\&. 
.PP
Definition at line \fB19\fP of file \fBEData\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void EData::AddSegment (\fBESegment\fP segment)"
Adds a segment to the \fBESegment\fP vector\&. 
.PP
Definition at line \fB479\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::AddTargetEffect (\fBTargetEffect\fP targetEffect)"
Adds a \fBTargetEffect\fP object to the vector contained within the present object\&. 
.PP
Definition at line \fB1036\fP of file \fBEData\&.cpp\fP\&.
.SS "\fBEDataIterator\fP EData::begin ()"
Returns an \fBEDataIterator\fP referring to the first data point in the set\&. 
.PP
Definition at line \fB1149\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::CalcCoulombAmplitude (\fBCNuc\fP * theCNuc)"
Calls \fBEPoint::CalcCoulombAmplitude\fP for each point in the entire \fBEData\fP object\&. 
.PP
Definition at line \fB714\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::CalcEDependentValues (\fBCNuc\fP * theCNuc, const \fBConfig\fP & configure)"
Calls \fBEPoint::CalcEDependentValues\fP for each point in the entire \fBEData\fP object\&. 
.PP
Definition at line \fB631\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::CalcLegendreP (int maxL)"
Calls \fBEPoint::CalcLegendreP\fP for each point in the entire \fBEData\fP object\&. 
.PP
Definition at line \fB574\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::CalculateECAmplitudes (\fBCNuc\fP * theCNuc, const \fBConfig\fP & configure)"
If external capture amplitudes are to be calculated, \fBEPoint::CalculateECAmplitudes\fP is called for each point with a corresponding external capture component in the \fBEData\fP object\&. Otherwise, the amplitudes are read from the specified file\&. 
.PP
Definition at line \fB870\fP of file \fBEData\&.cpp\fP\&.
.SS "\fBEData\fP * EData::Clone () const"
Creates a new copy of the \fBEData\fP object in memory and returns a pointer to the new object\&. Used in \fBAZURECalc\fP function class for thread safety\&. 
.PP
Definition at line \fB1117\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::DeleteLastSegment ()"
Deletes the last segment from the segment vector\&. 
.PP
Definition at line \fB1069\fP of file \fBEData\&.cpp\fP\&.
.SS "\fBEDataIterator\fP EData::end ()"
Returns an \fBEDataIterator\fP referring to one object past the last data point in the set\&. 
.PP
Definition at line \fB1157\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::Fill (const \fBConfig\fP & configure, \fBCNuc\fP * theCNuc)"
This function fills the data object with segments from the segment data files\&. After a segment is created, the \fBESegment::Fill\fP method is called for that segment\&. Returns -1 if the input files could not be read, otherwise returns 0\&. 
.PP
Definition at line \fB39\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::FillMnParams (ROOT::Minuit2::MnUserParameters & p)"
Fills the Minuit parameter array from initial values in the \fBEData\fP object\&. 
.PP
Definition at line \fB1052\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::FillNormsFromParams (const \fBvector_r\fP & p)"
Fills the Normalizations from the Minuit parameter array\&. 
.PP
Definition at line \fB1077\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::GetNormParamOffset () const"
Returns the offset of the normalization paramters in the Minuit parameter vector\&. 
.PP
Definition at line \fB278\fP of file \fBEData\&.cpp\fP\&.
.SS "\fBESegment\fP * EData::GetSegment (int segmentNum)"
Returns a pointer to a segment specified by a position in the \fBESegment\fP vector\&. 
.PP
Definition at line \fB1092\fP of file \fBEData\&.cpp\fP\&.
.SS "\fBESegment\fP * EData::GetSegmentFromKey (int segmentKey)"
Returns a pointer to a segment based on the segment key, as opposed to a position in the \fBESegment\fP vector\&. 
.PP
Definition at line \fB1101\fP of file \fBEData\&.cpp\fP\&.
.SS "std::vector< \fBESegment\fP > & EData::GetSegments ()"
Returns a reference to the vector of \fBESegment\fP objects\&. 
.PP
Definition at line \fB1166\fP of file \fBEData\&.cpp\fP\&.
.SS "\fBTargetEffect\fP * EData::GetTargetEffect (int effectNumber)"
Returns a pointer to the specified \fBTargetEffect\fP object\&. 
.PP
Definition at line \fB1137\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::Initialize (\fBCNuc\fP * compound, const \fBConfig\fP & configure)"
This function is identical in role to the \fBEPoint::Initialize\fP function, except that it initializes and entire \fBEData\fP object instead of a single \fBEPoint\fP object\&. 
.PP
Definition at line \fB447\fP of file \fBEData\&.cpp\fP\&.
.SS "bool EData::IsErrorAnalysis () const"
Returns true if the call to function is for error analysis via Minos, otherwise returns false\&. Used in the \fBAZURECalc\fP function class to suppress transformation and file output during error analysis\&. 
.PP
Definition at line \fB384\fP of file \fBEData\&.cpp\fP\&.
.SS "bool EData::IsFit () const"
Returns true if the data is to be fit, otherwise returns false\&. Used in the \fBAZURECalc\fP function class to determine if a clone of the \fBCNuc\fP and \fBEData\fP objects should be made for thread safety\&. 
.PP
Definition at line \fB375\fP of file \fBEData\&.cpp\fP\&.
.SS "bool EData::IsSegmentKey (int segmentKey)"
Sets the boolean indicating if the data is to be fit by \fBAZURECalc\fP function class\&. Used in \fBAZUREMain\fP function class before calls to Minuit and \fBAZURECalc\fP\&.
.PP
Returns true if the specified segment key exists corresponds to a segment in the \fBESegment\fP vector, otherwise returns false\&. 
.PP
Definition at line \fB398\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::Iterate ()"
This function updates the number of fit iterations per iteration during the fitting process\&. 
.PP
Definition at line \fB430\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::Iterations () const"
Returns the number of fit iterations needed to minimize the parameters to the data\&. 
.PP
Definition at line \fB263\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::MakePoints (const \fBConfig\fP & configure, \fBCNuc\fP * theCNuc)"
If the AZURE calculation is not data driven, this function is called in place of the \fBEData::Fill\fP function to create points at specified energies and angles\&. Returns -1 if the input files could not be read, otherwise returns 0\&. 
.PP
Definition at line \fB140\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::MapData ()"
This function determined what points should be mapped to another to reduce redundant calculations at like energies\&. 
.PP
Definition at line \fB1003\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::NumSegments () const"
Returns the number of segment objects in the \fBESegment\fP vector\&. 
.PP
Definition at line \fB29\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::NumTargetEffects () const"
Returns the number of \fBTargetEffect\fP objects contained in the present object\&. 
.PP
Definition at line \fB271\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::PrintCoulombAmplitude (const \fBConfig\fP & configure, \fBCNuc\fP * theCNuc)"
Prints the values calculated by \fBEPoint::CalcCoulombAmplitude\fP for each point in the entire \fBEData\fP object\&. 
.PP
Definition at line \fB728\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::PrintData (const \fBConfig\fP & configure)"
Prints the data point after the object is filled or points are created\&. 
.PP
Definition at line \fB487\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::PrintEDependentValues (const \fBConfig\fP & configure, \fBCNuc\fP * theCNuc)"
Prints the values calculated by \fBEPoint::CalcEDependentValues\fP for each point in the entire \fBEData\fP object\&. 
.PP
Definition at line \fB659\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::PrintLegendreP (const \fBConfig\fP & configure)"
Prints the Legendre polynomials for each point in the \fBEData\fP object\&. 
.PP
Definition at line \fB591\fP of file \fBEData\&.cpp\fP\&.
.SS "int EData::ReadTargetEffectsFile (const \fBConfig\fP & configure, \fBCNuc\fP * compound)"
Reads the target effects input file and creates the \fBTargetEffect\fP objects to be applied to the data\&. 
.PP
Definition at line \fB287\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::ResetIterations ()"
This function sets the number of iterations to zero\&. 
.PP
Definition at line \fB438\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::SetErrorAnalysis (bool errorAnalysis)"
Sets the boolean indicating if the call to the function is for error analysis via Minos\&. 
.PP
Definition at line \fB422\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::SetFit (bool fit)"
Sets an internal variable specifying if the data is to be fit by Minuit\&. Needed to determine cloning behavior in \fBAZURECalc\fP for thread safety\&. 
.PP
Definition at line \fB414\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::SetNormParamOffset (int offset)"
Sets the normalization parameter offset in the parameter vector\&. 
.PP
Definition at line \fB1044\fP of file \fBEData\&.cpp\fP\&.
.SS "void EData::WriteOutputFiles (const \fBConfig\fP & configure, bool isFit = \fCfalse\fP)"
Writes the output files for the calculation\&. The output files are all in center of mass frame, and contain columns for energy, angle, calculated cross section, calculated s-factor, experimental cross section and error and experimental s-factor and error\&. 
.PP
Definition at line \fB774\fP of file \fBEData\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
