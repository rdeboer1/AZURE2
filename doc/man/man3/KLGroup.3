.TH "KLGroup" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KLGroup \- An AZURE $ s,s',L $ group\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <KLGroup\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKLGroup\fP (int, int)"
.br
.ti -1c
.RI "int \fBGetK\fP () const"
.br
.ti -1c
.RI "int \fBGetLOrder\fP () const"
.br
.ti -1c
.RI "int \fBNumInterferences\fP () const"
.br
.ti -1c
.RI "int \fBIsInterference\fP (\fBInterference\fP)"
.br
.ti -1c
.RI "void \fBAddInterference\fP (\fBInterference\fP)"
.br
.ti -1c
.RI "\fBInterference\fP * \fBGetInterference\fP (int)"
.br
.in -1c
.SH "Detailed Description"
.PP 
An AZURE $ s,s',L $ group\&. 

Differential cross sections in R-Matrix theory contains terms nested inside a sum over entrance and exit spins as well as Legendre polynomial orders, $ L $\&. In AZURE, an $ s,s' $ combination is given by a \fBKGroup\fP object\&. It is therefore convenient to group \fBKGroup\fP objects with a specified polynomial orders for the calculation of differenial cross sections\&. The \fBKLGroup\fP object serves as a container class for a vector of \fBInterference\fP objects\&. 
.PP
Definition at line \fB16\fP of file \fBKLGroup\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "KLGroup::KLGroup (int kGroupNum, int lOrder)"
The object is created with reference to a specfic \fBKGroup\fP number as well as Legendre polynomial order\&. 
.PP
Definition at line \fB7\fP of file \fBKLGroup\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void KLGroup::AddInterference (\fBInterference\fP interference)"
Adds an interference combination to the \fBInterference\fP vector\&. 
.PP
Definition at line \fB57\fP of file \fBKLGroup\&.cpp\fP\&.
.SS "\fBInterference\fP * KLGroup::GetInterference (int interferenceNum)"
Returns a pointer to an interference combination specified by a position in the \fBInterference\fP vector\&. 
.PP
Definition at line \fB65\fP of file \fBKLGroup\&.cpp\fP\&.
.SS "int KLGroup::GetK () const"
Returns the position of the $ s,s' $ combination in the \fBKGroup\fP vector\&. 
.PP
Definition at line \fB14\fP of file \fBKLGroup\&.cpp\fP\&.
.SS "int KLGroup::GetLOrder () const"
Returns the Legendre polynomial order\&. 
.PP
Definition at line \fB22\fP of file \fBKLGroup\&.cpp\fP\&.
.SS "int KLGroup::IsInterference (\fBInterference\fP interference)"
Tests an interference combination to determine if it exists in the \fBInterference\fP vector\&. If the combination exists, its position in the vector is returned\&. Otherwise, the function returns 0\&. 
.PP
Definition at line \fB39\fP of file \fBKLGroup\&.cpp\fP\&.
.SS "int KLGroup::NumInterferences () const"
Returns the number of interference combinations in the \fBInterference\fP vector\&. 
.PP
Definition at line \fB30\fP of file \fBKLGroup\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
