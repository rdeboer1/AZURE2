.TH "RMatrixFunc" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
RMatrixFunc \- A function class to calculate the T-Matrix using the R-Matrix\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <RMatrixFunc\&.h>\fP
.PP
Inherits \fBGenMatrixFunc\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRMatrixFunc\fP (\fBCNuc\fP *, const \fBConfig\fP &)"
.br
.ti -1c
.RI "\fBCNuc\fP * \fBcompound\fP () const"
.br
.ti -1c
.RI "const \fBConfig\fP & \fBconfigure\fP () const"
.br
.ti -1c
.RI "void \fBClearMatrices\fP ()"
.br
.ti -1c
.RI "void \fBFillMatrices\fP (\fBEPoint\fP *)"
.br
.ti -1c
.RI "void \fBInvertMatrices\fP ()"
.br
.ti -1c
.RI "void \fBCalculateTMatrix\fP (\fBEPoint\fP *)"
.br
.ti -1c
.RI "void \fBCalculateCrossSection\fP ()"
.br
.ti -1c
.RI "\fBcomplex\fP \fBGetRMatrixElement\fP (int, int, int) const"
.br
.ti -1c
.RI "\fBcomplex\fP \fBGetRLMatrixElement\fP (int, int, int) const"
.br
.ti -1c
.RI "\fBcomplex\fP \fBGetRLInvMatrixElement\fP (int, int, int) const"
.br
.ti -1c
.RI "\fBcomplex\fP \fBGetRLInvRMatrixElement\fP (int, int, int) const"
.br
.ti -1c
.RI "\fBmatrix_c\fP * \fBGetJSpecRLMatrix\fP (int)"
.br
.ti -1c
.RI "void \fBAddRMatrixElement\fP (int, int, int, \fBcomplex\fP)"
.br
.ti -1c
.RI "void \fBAddRLMatrixElement\fP (int, int, int, \fBcomplex\fP)"
.br
.ti -1c
.RI "void \fBAddRLInvMatrix\fP (\fBmatrix_c\fP)"
.br
.ti -1c
.RI "void \fBAddRLInvRMatrixElement\fP (int, int, int, \fBcomplex\fP)"
.br
.in -1c

Public Member Functions inherited from \fBGenMatrixFunc\fP
.in +1c
.ti -1c
.RI "\fBGenMatrixFunc\fP ()"
.br
.ti -1c
.RI "virtual \fB~GenMatrixFunc\fP ()"
.br
.ti -1c
.RI "virtual void \fBClearMatrices\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBFillMatrices\fP (\fBEPoint\fP *)=0"
.br
.ti -1c
.RI "virtual void \fBInvertMatrices\fP ()=0"
.br
.ti -1c
.RI "virtual void \fBCalculateTMatrix\fP (\fBEPoint\fP *)=0"
.br
.ti -1c
.RI "void \fBCalculateCrossSection\fP (\fBEPoint\fP *)"
.br
.ti -1c
.RI "void \fBNewTempTMatrix\fP (\fBTempTMatrix\fP)"
.br
.ti -1c
.RI "void \fBAddToTempTMatrix\fP (int, \fBcomplex\fP)"
.br
.ti -1c
.RI "void \fBClearTempTMatrices\fP ()"
.br
.ti -1c
.RI "void \fBAddTMatrixElement\fP (int, int, \fBcomplex\fP, int decayNum=1)"
.br
.ti -1c
.RI "void \fBAddECTMatrixElement\fP (int, int, \fBcomplex\fP)"
.br
.ti -1c
.RI "int \fBIsTempTMatrix\fP (double, int, int)"
.br
.ti -1c
.RI "int \fBNumTempTMatrices\fP () const"
.br
.ti -1c
.RI "\fBTempTMatrix\fP * \fBGetTempTMatrix\fP (int)"
.br
.ti -1c
.RI "\fBcomplex\fP \fBGetTMatrixElement\fP (int, int, int decayNum=1) const"
.br
.ti -1c
.RI "\fBcomplex\fP \fBGetECTMatrixElement\fP (int, int) const"
.br
.ti -1c
.RI "virtual \fBCNuc\fP * \fBcompound\fP () const =0"
.br
.ti -1c
.RI "virtual const \fBConfig\fP & \fBconfigure\fP () const =0"
.br
.in -1c
.SS "Additional Inherited Members"


Protected Attributes inherited from \fBGenMatrixFunc\fP
.in +1c
.ti -1c
.RI "std::vector< \fBmatrix_c\fP > \fBtmatrix_\fP"
.br
.RI "Vector of internal T-matrix elements accessable to child class\&. "
.ti -1c
.RI "\fBmatrix_c\fP \fBec_tmatrix_\fP"
.br
.RI "Vector of external T-matrix elements accessable to child class\&. "
.in -1c
.SH "Detailed Description"
.PP 
A function class to calculate the T-Matrix using the R-Matrix\&. 

The \fBRMatrixFunc\fP function class calculates the T-Matrix for a given energy point using the compound nucleus object\&. The \fBRMatrixFunc\fP class is a child class of \fBGenMatrixFunc\fP, where the cross section is calculated from the T-Matrix\&. 
.PP
Definition at line \fB14\fP of file \fBRMatrixFunc\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "RMatrixFunc::RMatrixFunc (\fBCNuc\fP * compound, const \fBConfig\fP & configure)"
The \fBRMatrixFunc\fP object is created with reference to a \fBCNuc\fP object\&. 
.PP
Definition at line \fB11\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void RMatrixFunc::AddRLInvMatrix (\fBmatrix_c\fP matrix)"
This function adds an entire $ [1-RL]^{-1} $ matrix to a vector\&. 
.PP
Definition at line \fB315\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "void RMatrixFunc::AddRLInvRMatrixElement (int jGroupNum, int channelNum, int channelPrimeNum, \fBcomplex\fP matrixElement)"
This function adds a $ [1-RL]^{-1}R $ matrix element specified by positions in the \fBJGroup\fP and \fBAChannel\fP vectors\&. 
.PP
Definition at line \fB302\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "void RMatrixFunc::AddRLMatrixElement (int jGroupNum, int channelNum, int channelPrimeNum, \fBcomplex\fP matrixElement)"
This function adds a $ [1-RL] $ matrix element specified by positions in the \fBJGroup\fP and \fBAChannel\fP vectors\&. 
.PP
Definition at line \fB289\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "void RMatrixFunc::AddRMatrixElement (int jGroupNum, int channelNum, int channelPrimeNum, \fBcomplex\fP matrixElement)"
This function adds an R-Matrix element specified by positions in the \fBJGroup\fP and \fBAChannel\fP vectors\&. 
.PP
Definition at line \fB276\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "void RMatrixFunc::CalculateCrossSection ()"
Instantiated in the parent class\&. 
.SS "void RMatrixFunc::CalculateTMatrix (\fBEPoint\fP * point)\fC [virtual]\fP"
This function calculates the T-Matrix for each reaction pathways based on the $ [1-RL]^{-1}R $ matrix\&. 
.PP
Implements \fBGenMatrixFunc\fP\&.
.PP
Definition at line \fB197\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "void RMatrixFunc::ClearMatrices ()\fC [virtual]\fP"
Clears all matrices associated with the \fBRMatrixFunc\fP object\&. 
.PP
Implements \fBGenMatrixFunc\fP\&.
.PP
Definition at line \fB59\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "\fBCNuc\fP * RMatrixFunc::compound () const\fC [inline]\fP, \fC [virtual]\fP"
Returns a pointer to the compound nucleus object\&. 
.PP
Implements \fBGenMatrixFunc\fP\&.
.PP
Definition at line \fB20\fP of file \fBRMatrixFunc\&.h\fP\&.
.SS "const \fBConfig\fP & RMatrixFunc::configure () const\fC [inline]\fP, \fC [virtual]\fP"
This virtual function in implemented in the child class\&. 
.PP
Implements \fBGenMatrixFunc\fP\&.
.PP
Definition at line \fB21\fP of file \fBRMatrixFunc\&.h\fP\&.
.SS "void RMatrixFunc::FillMatrices (\fBEPoint\fP * point)\fC [virtual]\fP"
This function creates the $ [1-RL] $ and $ R $ Matrices from the \fBCNuc\fP object\&. 
.PP
Implements \fBGenMatrixFunc\fP\&.
.PP
Definition at line \fB72\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "\fBmatrix_c\fP * RMatrixFunc::GetJSpecRLMatrix (int jGroupNum)"
Returns an entire $ [1-RL] $ Matrix specified by a position in the \fBJGroup\fP vector\&. 
.PP
Definition at line \fB50\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "\fBcomplex\fP RMatrixFunc::GetRLInvMatrixElement (int jGroupNum, int channelNum, int channelPrimeNum) const"
Returns a $ [1-RL]^{-1} $ Matrix element specified by positions in the \fBJGroup\fP and \fBAChannel\fP vectors\&. 
.PP
Definition at line \fB34\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "\fBcomplex\fP RMatrixFunc::GetRLInvRMatrixElement (int jGroupNum, int channelNum, int channelPrimeNum) const"
Returns a $ [1-RL]^{-1}R $ Matrix element specified by positions in the \fBJGroup\fP and \fBAChannel\fP vectors\&. 
.PP
Definition at line \fB42\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "\fBcomplex\fP RMatrixFunc::GetRLMatrixElement (int jGroupNum, int channelNum, int channelPrimeNum) const"
Returns an $ [1-RL] $ Matrix element specified by positions in the \fBJGroup\fP and \fBAChannel\fP vectors\&. 
.PP
Definition at line \fB26\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "\fBcomplex\fP RMatrixFunc::GetRMatrixElement (int jGroupNum, int channelNum, int channelPrimeNum) const"
Returns an R-Matrix element specified by positions in the \fBJGroup\fP and \fBAChannel\fP vectors\&. 
.PP
Definition at line \fB18\fP of file \fBRMatrixFunc\&.cpp\fP\&.
.SS "void RMatrixFunc::InvertMatrices ()\fC [virtual]\fP"
This function inverts the $ [1-RL] $ matrices and creates the $ [1-RL]^{-1}R $ matrices\&. 
.PP
Implements \fBGenMatrixFunc\fP\&.
.PP
Definition at line \fB173\fP of file \fBRMatrixFunc\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
