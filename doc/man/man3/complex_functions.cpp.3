.TH "/Users/kuba/Desktop/R-Matrix/AZURE2/coul/src/complex_functions.cpp" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/kuba/Desktop/R-Matrix/AZURE2/coul/src/complex_functions.cpp
.SH SYNOPSIS
.br
.PP
\fC#include 'complex_functions\&.H'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBstd::complex\fP< double > \fBexpm1\fP (const \fBstd::complex\fP< double > &z)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBlog1p\fP (const \fBstd::complex\fP< double > &z)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBlog_Gamma\fP (const \fBstd::complex\fP< double > &z)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBsigma_l_calc\fP (const \fBstd::complex\fP< double > &l, const \fBstd::complex\fP< double > &eta)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBlog_Cl_eta_calc\fP (const \fBstd::complex\fP< double > &l, const \fBstd::complex\fP< double > &eta)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBlog_cut_constant_AS_calc\fP (const int omega, const \fBstd::complex\fP< double > &l, const \fBstd::complex\fP< double > &eta)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBlog_cut_constant_CFa_calc\fP (const bool is_it_normalized, const int omega, const \fBstd::complex\fP< double > &l, const \fBstd::complex\fP< double > &eta)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBlog_cut_constant_CFb_calc\fP (const bool is_it_normalized, const int omega, const \fBstd::complex\fP< double > &l, const \fBstd::complex\fP< double > &eta)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBsin_chi_calc\fP (const \fBstd::complex\fP< double > &l, const \fBstd::complex\fP< double > &eta)"
.br
.ti -1c
.RI "\fBstd::complex\fP< double > \fBexp_I_omega_chi_calc\fP (const int omega, const \fBstd::complex\fP< double > &l, const \fBstd::complex\fP< double > &eta)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBstd::complex\fP< double > exp_I_omega_chi_calc (const int omega, const \fBstd::complex\fP< double > & l, const \fBstd::complex\fP< double > & eta)"

.PP
Definition at line \fB360\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > expm1 (const \fBstd::complex\fP< double > & z)"

.PP
Definition at line \fB10\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > log1p (const \fBstd::complex\fP< double > & z)"

.PP
Definition at line \fB31\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > log_Cl_eta_calc (const \fBstd::complex\fP< double > & l, const \fBstd::complex\fP< double > & eta)"

.PP
Definition at line \fB160\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > log_cut_constant_AS_calc (const int omega, const \fBstd::complex\fP< double > & l, const \fBstd::complex\fP< double > & eta)"

.PP
Definition at line \fB200\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > log_cut_constant_CFa_calc (const bool is_it_normalized, const int omega, const \fBstd::complex\fP< double > & l, const \fBstd::complex\fP< double > & eta)"

.PP
Definition at line \fB254\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > log_cut_constant_CFb_calc (const bool is_it_normalized, const int omega, const \fBstd::complex\fP< double > & l, const \fBstd::complex\fP< double > & eta)"

.PP
Definition at line \fB307\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > log_Gamma (const \fBstd::complex\fP< double > & z)"

.PP
Definition at line \fB68\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > sigma_l_calc (const \fBstd::complex\fP< double > & l, const \fBstd::complex\fP< double > & eta)"

.PP
Definition at line \fB126\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SS "\fBstd::complex\fP< double > sin_chi_calc (const \fBstd::complex\fP< double > & l, const \fBstd::complex\fP< double > & eta)"

.PP
Definition at line \fB330\fP of file \fBcomplex_functions\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
