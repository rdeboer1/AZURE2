.TH "PPair" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PPair \- An AZURE Particle Pair\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <PPair\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPPair\fP (\fBNucLine\fP)"
.br
.ti -1c
.RI "bool \fBIsEntrance\fP () const"
.br
.ti -1c
.RI "int \fBGetZ\fP (int) const"
.br
.ti -1c
.RI "int \fBGetPi\fP (int) const"
.br
.ti -1c
.RI "int \fBGetPType\fP () const"
.br
.ti -1c
.RI "int \fBNumDecays\fP () const"
.br
.ti -1c
.RI "int \fBIsDecay\fP (\fBDecay\fP)"
.br
.ti -1c
.RI "int \fBIsDecay\fP (int)"
.br
.ti -1c
.RI "int \fBGetPairKey\fP () const"
.br
.ti -1c
.RI "double \fBGetM\fP (int) const"
.br
.ti -1c
.RI "double \fBGetG\fP (int) const"
.br
.ti -1c
.RI "double \fBGetJ\fP (int) const"
.br
.ti -1c
.RI "double \fBGetExE\fP () const"
.br
.ti -1c
.RI "double \fBGetSepE\fP () const"
.br
.ti -1c
.RI "double \fBGetChRad\fP () const"
.br
.ti -1c
.RI "double \fBGetRedMass\fP () const"
.br
.ti -1c
.RI "double \fBGetI1I2Factor\fP () const"
.br
.ti -1c
.RI "void \fBAddDecay\fP (\fBDecay\fP)"
.br
.ti -1c
.RI "void \fBSetEntrance\fP ()"
.br
.ti -1c
.RI "\fBDecay\fP * \fBGetDecay\fP (int)"
.br
.in -1c
.SH "Detailed Description"
.PP 
An AZURE Particle Pair\&. 

In R-Matrix theory, the configuration space in the external region is decomposed into combinations of particle pairs, traditionally given by the symbol $ \alpha $\&. In AZURE, these particle pair are represented by a \fBPPair\fP object\&. \fBPPair\fP objects are containers for vectors of \fBDecay\fP objects\&. 
.PP
Definition at line \fB16\fP of file \fBPPair\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PPair::PPair (\fBNucLine\fP nucLine)"
A particle pair object is created from and entry in the nuclear input file\&. 
.PP
Definition at line \fB9\fP of file \fBPPair\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void PPair::AddDecay (\fBDecay\fP decay)"
Adds a decay particle pair to the \fBDecay\fP vector\&. 
.PP
Definition at line \fB183\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetChRad () const"
Returns the channel radius of the particle pair\&. 
.PP
Definition at line \fB159\fP of file \fBPPair\&.cpp\fP\&.
.SS "\fBDecay\fP * PPair::GetDecay (int decayNum)"
Returns a pointer to the decay particle pair specified by a position in the \fBDecay\fP vector\&. 
.PP
Definition at line \fB199\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetExE () const"
Returns the excitation energy of the particle pair\&. 
.PP
Definition at line \fB143\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetG (int particle) const"
Returns the g-factor of the specified particle (1 or 2)\&. 
.PP
Definition at line \fB127\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetI1I2Factor () const"
Returns the factor $ \frac{1}{(2I_1+1)(2I_2+1)} $ of the particle pair\&. 
.PP
Definition at line \fB175\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetJ (int particle) const"
Returns the total spin of the specified particle (1 or 2)\&. 
.PP
Definition at line \fB135\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetM (int particle) const"
Returns the mass number of the specified particle (1 or 2)\&. 
.PP
Definition at line \fB119\fP of file \fBPPair\&.cpp\fP\&.
.SS "int PPair::GetPairKey () const"
Returns the pair key for the particle pair\&. 
.PP
Definition at line \fB111\fP of file \fBPPair\&.cpp\fP\&.
.SS "int PPair::GetPi (int particle) const"
Returns the parity of the specified particle (1 or 2)\&. 
.PP
Definition at line \fB52\fP of file \fBPPair\&.cpp\fP\&.
.SS "int PPair::GetPType () const"
Returns the integer particle pair type\&. Pair types currently used in AZURE are 0: particle,particle and 10: particle,gamma\&. 
.PP
Definition at line \fB60\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetRedMass () const"
Returns the reduced mass of the particle pair\&. 
.PP
Definition at line \fB167\fP of file \fBPPair\&.cpp\fP\&.
.SS "double PPair::GetSepE () const"
Returns the seperation energy of the particle pair\&. 
.PP
Definition at line \fB151\fP of file \fBPPair\&.cpp\fP\&.
.SS "int PPair::GetZ (int particle) const"
Returns the atomic number of the specified particle (1 or 2)\&. 
.PP
Definition at line \fB44\fP of file \fBPPair\&.cpp\fP\&.
.SS "int PPair::IsDecay (\fBDecay\fP decay)"
Tests a given decay particle pair to determine if it is in the \fBDecay\fP vector\&. If the decay particle pair exists in the vector, the position in the vector is returned\&. Otherwise, the function returns 0\&. 
.PP
Definition at line \fB78\fP of file \fBPPair\&.cpp\fP\&.
.SS "int PPair::IsDecay (int pairNum)"
Tests a given particle pair number to determine if there exists a corresponding particle pair decay in the \fBDecay\fP vector\&. If the object exists, the position in the vector is returned\&. Otherwise, the function returns 0\&. 
.PP
Definition at line \fB95\fP of file \fBPPair\&.cpp\fP\&.
.SS "bool PPair::IsEntrance () const"
Returns true if the particle pair is an internal entrance pair, otherwise returns false\&. 
.PP
Definition at line \fB36\fP of file \fBPPair\&.cpp\fP\&.
.SS "int PPair::NumDecays () const"
Returns the number of decay particle pairs for a given pair\&. Size of \fBDecay\fP vector will only be nonzero if \fBPPair\fP object is an entrance pair\&. 
.PP
Definition at line \fB69\fP of file \fBPPair\&.cpp\fP\&.
.SS "void PPair::SetEntrance ()"
Sets the particle pair to be an internal entrance pair\&. 
.PP
Definition at line \fB191\fP of file \fBPPair\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
