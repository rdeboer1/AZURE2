.TH "JGroup" 3AZURE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
JGroup \- An AZURE $ J^\pi $ group\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <JGroup\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBJGroup\fP (\fBNucLine\fP)"
.br
.ti -1c
.RI "\fBJGroup\fP (double, int)"
.br
.ti -1c
.RI "bool \fBIsInRMatrix\fP () const"
.br
.ti -1c
.RI "int \fBIsLevel\fP (\fBALevel\fP)"
.br
.ti -1c
.RI "int \fBGetPi\fP () const"
.br
.ti -1c
.RI "int \fBNumLevels\fP () const"
.br
.ti -1c
.RI "int \fBNumChannels\fP ()"
.br
.ti -1c
.RI "int \fBIsChannel\fP (\fBAChannel\fP)"
.br
.ti -1c
.RI "double \fBGetJ\fP () const"
.br
.ti -1c
.RI "void \fBAddLevel\fP (\fBALevel\fP)"
.br
.ti -1c
.RI "void \fBAddChannel\fP (\fBAChannel\fP)"
.br
.ti -1c
.RI "\fBAChannel\fP * \fBGetChannel\fP (int)"
.br
.ti -1c
.RI "\fBALevel\fP * \fBGetLevel\fP (int)"
.br
.in -1c
.SH "Detailed Description"
.PP 
An AZURE $ J^\pi $ group\&. 

In R-Matrix theory, levels are grouped according to their $ J^\pi $ values\&. There is one R-/A-Matrix, and thus one T-Matrix, for each $ J^\pi $ group\&. A \fBJGroup\fP object holds vectors of \fBALevel\fP and \fBAChannel\fP objects\&. 
.PP
Definition at line \fB17\fP of file \fBJGroup\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "JGroup::JGroup (\fBNucLine\fP nucLine)"
This constructor is used when a $ J^\pi $ group is created from an entry in the nuclear input file\&. 
.PP
Definition at line \fB8\fP of file \fBJGroup\&.cpp\fP\&.
.SS "JGroup::JGroup (double j, int pi)"
This constructor is used when a $ J^\pi $ group is created from specified values of spin and parity\&. 
.PP
Definition at line \fB15\fP of file \fBJGroup\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void JGroup::AddChannel (\fBAChannel\fP channel)"
Adds a new channel to the vector of \fBAChannel\fP objects\&. 
.PP
Definition at line \fB108\fP of file \fBJGroup\&.cpp\fP\&.
.SS "void JGroup::AddLevel (\fBALevel\fP level)"
Adds a new level to the vector of \fBALevel\fP objects\&. 
.PP
Definition at line \fB100\fP of file \fBJGroup\&.cpp\fP\&.
.SS "\fBAChannel\fP * JGroup::GetChannel (int channelNum)"
Returns a pointer to a specified channel in the \fBAChannel\fP vector\&. 
.PP
Definition at line \fB117\fP of file \fBJGroup\&.cpp\fP\&.
.SS "double JGroup::GetJ () const"
Returns the spin value of the $ J^\pi $ group\&. 
.PP
Definition at line \fB92\fP of file \fBJGroup\&.cpp\fP\&.
.SS "\fBALevel\fP * JGroup::GetLevel (int levelNum)"
Returns a pointer to a specified level in the \fBALevel\fP vector\&. 
.PP
Definition at line \fB126\fP of file \fBJGroup\&.cpp\fP\&.
.SS "int JGroup::GetPi () const"
Returns the parity of the the $ J^\pi $ group as $ \pm1 $\&. 
.PP
Definition at line \fB50\fP of file \fBJGroup\&.cpp\fP\&.
.SS "int JGroup::IsChannel (\fBAChannel\fP channel)"
This function tests if a given channel already exists in the vector of \fBAChannel\fP objects\&. If the channel exists the position of the channel in the vector is returned, otherwise the function returns 0\&. 
.PP
Definition at line \fB75\fP of file \fBJGroup\&.cpp\fP\&.
.SS "bool JGroup::IsInRMatrix () const"
Returns true if the $ J^\pi $ group is to be included in the A-/R-Matrix calculation, otherwise returns false\&. A $ J^\pi $ group may specify only a bound state for external capture, but may not correspond to an R-Matrix state (i\&.e\&. subthreshold state)\&. 
.PP
Definition at line \fB23\fP of file \fBJGroup\&.cpp\fP\&.
.SS "int JGroup::IsLevel (\fBALevel\fP level)"
This function tests if a given level already exists in the vector of \fBALevel\fP objects\&. If the level exists the position of the level in the vector is returned, otherwise the function returns 0\&. 
.PP
Definition at line \fB32\fP of file \fBJGroup\&.cpp\fP\&.
.SS "int JGroup::NumChannels ()"
Returns the number of channels in the \fBAChannel\fP vector\&. 
.PP
Definition at line \fB66\fP of file \fBJGroup\&.cpp\fP\&.
.SS "int JGroup::NumLevels () const"
Returns the number of levels in the \fBALevel\fP vector\&. 
.PP
Definition at line \fB58\fP of file \fBJGroup\&.cpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for AZURE2 from the source code\&.
